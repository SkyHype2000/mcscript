const fs = require("fs");
const path = require("path");

let packid = "";
genNew = function (name) {
  packid = name.toLowerCase().replace(" ", "_");
  // mcmeta file
  genFile(
    "pack.mcmeta",
    `
{
  "pack": {
    "pack_format": 6,
    "description": "` +
      packid +
      ` vanilla pack generated by mcscript"
  }
}`
  );
  // load event
  genFile(
    "data/minecraft/tags/functions/load.json",
    `
{
  "values":[
  "` +
      packid +
      `:load"
  ]
}`
  );
  // clock event
  genFile(
    "data/minecraft/tags/functions/tick.json",
    `
{
  "values":[
  "` +
      packid +
      `:main"
  ]
}`
  );
  // load.mcscript
  genFile(
    "data/" + packid + "/scripts/load.mcscript",
    `#file: ./load

// here goes your load content`
  );
  // load mcscript
  genFile(
    "data/" + packid + "/functions/mcscript/load.mcfunction",
    `
# please do not touch this file!
# it is used by the compiler!`
  );
  // main.mcscript
  genFile(
    "data/" + packid + "/scripts/main.mcscript",
    `
#file: ./main
// here goes your main content
// executes 20 times a second`
  );
  ensureDirectoryExistence(
    packid + "/data/" + packid + "/advancements/test.js"
  );
  ensureDirectoryExistence(packid + "/data/" + packid + "/tags/test.js");
};

function ensureDirectoryExistence(filePath) {
  const dirname = path.dirname(filePath);
  if (fs.existsSync(dirname)) {
    return true;
  }
  ensureDirectoryExistence(dirname);
  fs.mkdirSync(dirname);
}

function genFile(file, data) {
  file = packid + "/" + file;
  ensureDirectoryExistence(file);
  fs.writeFile(file, data, (err) => {
    if (err) throw err;
    console.log("\x1b[36m", "Generated ", "\x1b[33m", file, "\x1b[0m");
  });
}

exports.new = genNew;
